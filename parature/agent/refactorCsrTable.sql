DROP TABLE "SRDF"."PARATURE_CSR";


CREATE TABLE "SRDF"."PARATURE_CSR" (
		CSR_ID BIGINT NOT NULL,
		"EMAIL" VARGRAPHIC(128) NOT NULL, 
		"SCREEN_NAME"  VARCHAR(40), 
		"FULL_NAME" VARGRAPHIC(256), 
		"PHONE_NUMBER1" VARCHAR(40), 
		"PHONE_NUMBER2" VARCHAR(40), 
		"FAX" VARCHAR(40), 
		"TIMEZONE" VARCHAR(64), 
		"STATUS" VARCHAR(20), 
		"DATE_CREATED" TIMESTAMP, 
		"DATE_UPDATED" TIMESTAMP, 
		"CNUM" VARCHAR(20), 
		"CREATE_USER" VARGRAPHIC(127), 
		"CREATE_DATETIME" TIMESTAMP NOT NULL DEFAULT CURRENT TIMESTAMP, 
		"UPDATE_USER" VARGRAPHIC(127), 
		"UPDATE_DATETIME" TIMESTAMP NOT NULL DEFAULT CURRENT TIMESTAMP, 
		"CREATE_SRC_APPL" VARCHAR(127) NOT NULL DEFAULT 'INTSYS', 
		"UPDATE_SRC_APPL" VARCHAR(127) NOT NULL DEFAULT 'INTSYS'
	)
	DATA CAPTURE NONE 
	COMPRESS NO;


CREATE INDEX "SRDF"."PARATURE_CSR_PK"
	ON "SRDF"."PARATURE_CSR"
	("CSR_ID"		ASC)
	MINPCTUSED 0
	ALLOW REVERSE SCANS
	PAGE SPLIT SYMMETRIC
	COLLECT SAMPLED DETAILED STATISTICS
	COMPRESS NO;
	
ALTER TABLE "SRDF"."PARATURE_CSR" ADD CONSTRAINT "PARATURE_CSR_PK" PRIMARY KEY
	("CSR_ID");

drop trigger "SRDF"."T_IB_PARATURE_CSR" ;
CREATE TRIGGER "SRDF"."T_IB_PARATURE_CSR" 
	BEFORE INSERT ON "SRDF"."PARATURE_CSR"
	REFERENCING  NEW AS N
	FOR EACH ROW
	NOT SECURED
BEGIN ATOMIC
   SET N.CREATE_DATETIME = CURRENT TIMESTAMP;--
   SET N.UPDATE_DATETIME = CURRENT TIMESTAMP;--
   SET N.UPDATE_USER = N.CREATE_USER;--
   IF (N.CREATE_USER IS NULL OR RTRIM(N.CREATE_USER) = '') THEN
      SET N.CREATE_USER = USER;--
      SET N.UPDATE_USER = USER;--
   END IF;--
END;

drop TRIGGER "SRDF"."T_UB_PARATURE_CSR" ;
CREATE TRIGGER "SRDF"."T_UB_PARATURE_CSR" 
	BEFORE UPDATE ON "SRDF"."PARATURE_CSR"
	REFERENCING  NEW AS N
	FOR EACH ROW
	NOT SECURED
begin atomic
  set n.update_datetime = current timestamp;--
  if nvl(rtrim(n.update_user), '') = '' then
    set n.update_user = user;  --
  end if; --
  if nvl(rtrim(n.update_src_appl), '') = '' then
    set n.update_src_appl = 'INTSYS';  --
  end if; --
end;